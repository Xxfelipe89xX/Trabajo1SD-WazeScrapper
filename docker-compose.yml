version: '3.9'

services:
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - redcache

  scraper:
    build:
      context: ./scraper
      dockerfile: Dockerfile
    volumes:
      - ./almacenamiento:/app/almacenamiento:z
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
    networks:
      - redcache

  generador:
    build:
      context: ./generador
      dockerfile: Dockerfile
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017

  cache:
    build:
      context: ./cache
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - ELASTIC_URI=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - redcache

  limpieza:
    build:
      context: ./procesamiento
      dockerfile: Dockerfile.limpieza
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    volumes:
      - ./trafico.eventos.json:/app/trafico.eventos.json:ro
      - ./procesamiento/datos:/app/datos
    networks:
      - redcache

  pig:
    build:
      context: ./procesamiento
      dockerfile: Dockerfile.pig
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    volumes:
      - ./procesamiento/datos:/workspace/datos
      - ./resultados:/workspace/resultados
    networks:
      - redcache

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - redcache

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - redcache

  visualizacion:
    build:
      context: ./visualizacion
      dockerfile: Dockerfile
    environment:
      - ELASTIC_HOST=elasticsearch
      - ELASTIC_PORT=9200
      - INDEX_NAME=eventos_procesados
      - DATA_DIR=/app/resultados
    volumes:
      - ./resultados:/app/resultados:ro,z
    depends_on:
      - elasticsearch
    networks:
      - redcache

volumes:
  mongo-data:
  esdata:

networks:
  redcache:
    driver: bridge
